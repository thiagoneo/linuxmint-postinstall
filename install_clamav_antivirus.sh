#!/bin/bash

# Atualizar a base de dados do repositório
apt update

# Instalar os pacotes necessários
apt -y install clamav clamav-daemon clamtk clamtk-gnome inotify-tools libnotify-bin

mkdir -p /etc/clamav

# Backup do arquivo de configuração do ClamAV existente
cp /etc/clamav/clamd.conf /etc/clamav/clamd.conf.bkp.$(date +%s)

# Geração do novo arquivo de configuração do ClamAV 
cat <<EOF > /etc/clamav/clamd.conf
#Automatically Generated by clamav-daemon postinst
#To reconfigure clamd run #dpkg-reconfigure clamav-daemon
#Please read /usr/share/doc/clamav-daemon/README.Debian.gz for details
LocalSocket /var/run/clamav/clamd.ctl
FixStaleSocket true
LocalSocketGroup clamav
LocalSocketMode 600
# Exclude the UID of the scanner itself from checking, to prevent loops
OnAccessExcludeUname clamav
# TemporaryDirectory is not set to its default /tmp here to make overriding
# the default with environment variables TMPDIR/TMP/TEMP possible
User clamav
ScanMail true
ScanArchive true
ArchiveBlockEncrypted false
MaxDirectoryRecursion 15
FollowDirectorySymlinks false
FollowFileSymlinks false
ReadTimeout 180
MaxThreads 12
MaxConnectionQueueLength 15
LogSyslog false
LogRotate true
LogFacility LOG_LOCAL6
LogClean false
LogVerbose false
PreludeEnable no
PreludeAnalyzerName ClamAV
DatabaseDirectory /var/lib/clamav
OfficialDatabaseOnly false
SelfCheck 3600
Foreground false
Debug false
ScanPE true
MaxEmbeddedPE 10M
ScanOLE2 true
ScanPDF true
ScanHTML true
MaxHTMLNormalize 10M
MaxHTMLNoTags 2M
MaxScriptNormalize 5M
MaxZipTypeRcg 1M
ScanSWF true
ExitOnOOM false
LeaveTemporaryFiles false
AlgorithmicDetection true
ScanELF true
IdleTimeout 30
CrossFilesystems true
PhishingSignatures true
PhishingScanURLs true
PhishingAlwaysBlockSSLMismatch false
PhishingAlwaysBlockCloak false
PartitionIntersection false
DetectPUA false
ScanPartialMessages false
HeuristicScanPrecedence false
StructuredDataDetection false
CommandReadTimeout 30
SendBufTimeout 200
MaxQueue 100
ExtendedDetectionInfo true
OLE2BlockMacros false
AllowAllMatchScan true
ForceToDisk false
DisableCertCheck false
DisableCache false
MaxScanTime 120000
MaxScanSize 100M
MaxFileSize 50M
MaxRecursion 16
MaxFiles 10000
MaxPartitions 50
MaxIconsPE 100
PCREMatchLimit 10000
PCRERecMatchLimit 5000
PCREMaxFileSize 50M
ScanXMLDOCS true
ScanHWP3 true
MaxRecHWP3 16
StreamMaxLength 25M
LogFile /var/log/clamav/clamav.log
LogTime true
LogFileUnlock false
LogFileMaxSize 0
Bytecode true
BytecodeSecurity TrustSigned
BytecodeTimeout 60000
OnAccessMaxFileSize 50M
OnAccessIncludePath /home
OnAccessPrevention no
# Perform scans on newly created, moved, or renamed files
OnAccessExtraScanning yes
VirusEvent /etc/clamav/virus-event.bash
EOF

# Geração do script de evento de vírus
cat <<EOF > /etc/clamav/virus-event.bash
#!/bin/bash

QUARANTINE_DIR=/var/clamav/quarantine

if [[ "\$CLAM_VIRUSEVENT_FILENAME" == "\$QUARANTINE_DIR"* ]]; then
    exit 0
fi

DATA_HORA=\$(date +"%Y-%m-%d_%H:%M:%S.00")

echo "\${DATA_HORA} Assinatura detectada pelo ClamAV: \$CLAM_VIRUSEVENT_VIRUSNAME em \$CLAM_VIRUSEVENT_FILENAME" >> /var/log/clamav/virus-event.log
EOF

# Criação do arquivo logrotate para o virus-event
cat <<EOF > /etc/logrotate.d/clamav-virus-event
/var/log/clamav/virus-event.log {
    size 100k
    rotate 4
    compress
    missingok
    notifempty
    create 640 clamav adm
}
EOF

# Adicionar permissão de execução ao script de evento de vírus
chmod +x /etc/clamav/virus-event.bash

# Geração do script de notificação de vírus
cat <<EOF > /etc/clamav/clamav-alert-notifier.sh
#!/bin/bash

LOG_FILE="/var/log/clamav/virus-event.log"
TAIL_PID=""

tail -F -n -0 "\$LOG_FILE" | while read -r LINE; do
    [ -z "\$LINE" ] && continue
    MESSAGE="\${LINE#* }"

    # Itera sobre sessões gráficas ativas
    for USER in \$(who | awk '{print \$1}' | sort -u); do
        USERID=\$(id -u "\$USER")
        ADDRESS=\$(find /run/user/\$USERID -maxdepth 1 -type s -name "bus" 2>/dev/null | head -n1)

        if [[ -n "\$ADDRESS" ]]; then
            sudo -u "\$USER" DBUS_SESSION_BUS_ADDRESS="unix:path=\$ADDRESS" \
                DISPLAY=":0" \
                /usr/bin/notify-send -u normal -i dialog-warning "Arquivo malicioso detectado!" "\$MESSAGE"
        fi
    done
done
EOF
chmod +x /etc/clamav/clamav-alert-notifier.sh

# Configuração do AppArmor para o ClamAV notifier
PROFILE="/etc/apparmor.d/usr.sbin.clamd"
PERMISSIONS=(
    "/etc/clamav/virus-event.bash rix,"
    "/var/log/clamav/virus-event.log rw,"
    "/usr/bin/dash ix,"
    "/dev/tty rw,"
    "/etc/clamav/** r,"
    "/var/log/** rw,"
    "/tmp/** rw,"
    "/proc/*/cgroup r,"
)

for PERM in "${PERMISSIONS[@]}"; do
    if grep -qF "$PERM" "$PROFILE"; then
        echo "[✔] Permissão já existe: $PERM"
    else
        echo "[+] Inserindo: $PERM"
        sed -i "/^}/i \  $PERM" "$PROFILE"
    fi
done
echo "[*] Recarregando perfil AppArmor..."
apparmor_parser -r "$PROFILE" && echo "[✔] Recarregado com sucesso." || echo "[✘] Erro ao recarregar perfil!"


# Criação do serviço systemd para o notificador de vírus
cat <<EOF > /etc/systemd/system/clamav-alert-notifier.service
[Unit]
Description=ClamAV Virus Alert Notifier
After=multi-user.target

[Service]
Type=simple
ExecStart=/etc/clamav/clamav-alert-notifier.sh
Restart=always

[Install]
WantedBy=multi-user.target
EOF

# Criação do serviço systemd para o ClamAV On-Access Scanner
cat <<EOF > /etc/systemd/system/clamav-clamonacc.service
# clamonacc systemd service file primarily the work of ChadDevOps & Aaron Brighton
# See: https://medium.com/@aaronbrighton/installation-configuration-of-clamav-antivirus-on-ubuntu-18-04-a6416bab3b41#a340

[Unit]
Description=ClamAV On-Access Scanner
Documentation=man:clamonacc(8) man:clamd.conf(5) https://docs.clamav.net/
Requires=clamav-daemon.service
After=clamav-daemon.service syslog.target network.target

[Service]
Type=simple
User=root
ExecStartPre=/bin/bash -c "while [ ! -S /run/clamav/clamd.ctl ]; do sleep 1; done"
ExecStart=
ExecStart=/usr/sbin/clamonacc -F --fdpass --log=/var/log/clamav/clamonacc.log --move=/var/clamav/quarantine
ExecStop=/bin/kill -SIGKILL \$MAINPID

[Install]
WantedBy=multi-user.target
EOF

# Criação do diretório de quarentena do ClamAV
mkdir -p /var/clamav/quarantine
chown -R clamav:clamav /var/clamav/quarantine
chmod 700 /var/clamav/quarantine

# Criação do arquivo de log do virus-event
mkdir -p /var/log/clamav
touch /var/log/clamav/virus-event.log
chown clamav:clamav /var/log/clamav/virus-event.log
chmod 640 /var/log/clamav/virus-event.log

systemctl stop clamav-freshclam
freshclam

# Limpeza automática da quarentena do ClamAV (executado via anacron/cron.daily)
cat <<EOF > /etc/cron.daily/clamav-quarantine-clean
#!/bin/bash
find /var/clamav/quarantine -type f -mtime +30 -delete
EOF
chmod +x /etc/cron.daily/clamav-quarantine-clean

# Habilitar serviços
systemctl daemon-reload
systemctl enable clamav-daemon
systemctl restart clamav-daemon
systemctl enable clamav-clamonacc.service
systemctl restart clamav-clamonacc.service
systemctl enable clamav-alert-notifier.service
systemctl restart clamav-alert-notifier.service
systemctl enable clamav-freshclam
systemctl restart clamav-freshclam

# Mensagem de conclusão
echo "Fim da execução do script de instalação do ClamAV."
